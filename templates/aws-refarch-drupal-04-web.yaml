---
AWSTemplateFormatVersion: 2010-09-09

Description: Creates a web Auto Scaling group and installs Drupal with composer

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Web Parameters
      Parameters:
        - KeyName
        - WebInstanceType
        - WebAsgMax
        - WebAsgMin
        - WebSecurityGroup
        - WebSubnet0
        - WebSubnet1
        - WebSubnet2
        - PublicAlbTargetGroupArn
        - PublicAlbHostname
        - SslCertificate
    - Label:
        default: Drupal Parameters
      Parameters:
        - Title
        - ComposerProject
        - ComposerUseDev
        - InstallProfile
        - DomainName
        - Directory
        - AdminUsername
        - AdminPassword
        - AdminEmail
        - Locale
    - Label:
        default: Database Parameters
      Parameters:
        - UseRDSClusterBoolean
        - DatabaseClusterEndpointAddress
        - DatabaseName
        - DatabaseMasterUsername
        - DatabaseMasterPassword
    - Label:
        default: File System Parameters
      Parameters:
        - ElasticFileSystem
    ParameterLabels:
      UseRDSClusterBoolean:
        default: Create an RDS cluster?
      DatabaseClusterEndpointAddress:
        default: DB Cluster Endpoint Address
      DatabaseMasterUsername:
        default: DB Master Username  
      DatabaseMasterPassword:
        default: DB Master Password
      DatabaseName:
        default: DB Name
      ElasticFileSystem:
        default: EFS File System
      KeyName:
        default: Existing Key Pair
      PublicAlbTargetGroupArn:
        default: Public Alb Target Group Arn
      PublicAlbHostname:
        default: Public Alb Hostname
      SslCertificate:
        default: ACM Cert attached to Public Alb
      WebAsgMax:
        default: Web ASG Max
      WebAsgMin:
        default: Web ASG Min
      WebInstanceType:
        default: Web Instance Type
      WebSecurityGroup:
        default: Web Security Group
      WebSubnet0:
        default: Web Subnet for AZ 0
      WebSubnet1:
        default: Web Subnet for AZ 1
      WebSubnet2:
        default: Web Subnet for AZ 2
      AdminEmail:
        default: Admin Email
      AdminPassword:
        default: Admin Password
      AdminUsername:
        default: Admin Username
      Directory:
        default: Site Directory
      DomainName:
        default: Site Domain
      Locale:
        default: Language Code
      Title:
        default: Site Title
      ComposerProject:
        default: Composer Project Namespace
      ComposerUseDev:
        default: Composer Build Type
      InstallProfile:
        default: Install Profile

Parameters:

  UseRDSClusterBoolean:
    AllowedValues:
      - True
      - False
    Default: False
    Description: Specifies whether to use an RDS cluster or a single instance.
    Type: String
  DatabaseClusterEndpointAddress:
    Description: The RDS cluster endpoint address.
    Type: String
  DatabaseMasterUsername:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master username.
    ConstraintDescription: Must contain only alphanumeric characters and be at least 8 characters.
    MaxLength: 16
    MinLength: 1
    Type: String
  DatabaseMasterPassword:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-
    Description: The Amazon RDS master password.
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DatabaseName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master database name.
    Type: String
  ElasticFileSystem:
    AllowedPattern: ^(fs-)([a-z0-9]{8,17})$
    Description: The Amazon EFS file system id.
    Type: String
  KeyName:
    AllowedPattern: ^([a-zA-Z0-9 @.`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and special characters.
    Description: Name of an EC2 KeyPair. Your bastion & Web instances will launch with this KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
  PublicAlbTargetGroupArn:
    Description: The public application load balancer target group arn.
    Type: String
  PublicAlbHostname:
    Description: The hostname of the public ALB http form (e.g. http://abdc-12345-xyz.<region>.elb.amazonaws.com)
    Type: String
  SslCertificate:
    AllowedValues:
      - True
      - False
    Default: False
    Description: Is there an ACM SSL Certificate attached to the Public Alb?
    Type:
      String
  WebAsgMax:
    AllowedPattern: ^((?!0$)[1-2]?[0-9]|30)$
    ConstraintDescription: Must be a number between 1 and 30.
    Default: 2
    Description: Specifies the maximum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebAsgMin:
    AllowedPattern: ^([0-0]?[0-9]|10)$
    ConstraintDescription: Must be a number between 0 and 10.
    Default: 1
    Description: Specifies the minimum number of EC2 instances in the Web Autoscaling Group.
    Type: String
  WebInstanceType:
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t3.medium
    Description: The Amazon EC2 instance type for your web instances.
    Type: String
  WebSecurityGroup:
    Description: Select the web security group.
    Type: AWS::EC2::SecurityGroup::Id
  WebSubnet0:
    Description: Select an existing web subnet for AZ 0.
    Type: AWS::EC2::Subnet::Id
  WebSubnet1:
    Description: Select an existing web subnet for AZ 1.
    Type: AWS::EC2::Subnet::Id 
  WebSubnet2:
    Description: Select an existing web subnet for AZ 2.
    Type: AWS::EC2::Subnet::Id
  AdminEmail:
    AllowedPattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
    Description: The Drupal admin email address.
    Type: String
  AdminPassword:
    AllowedPattern: ^([a-zA-Z0-9`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-   
    Description: The Drupal admin password.
    Type: String
    NoEcho: true
  AdminUsername:
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9_-])*([a-zA-Z0-9])$
    Description: The Drupal admin username.
    Type: String
  Directory:
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9_-])*([a-zA-Z0-9])$
    Description: The Drupal site directory.
    Type: String
  DomainName:
    AllowedPattern: ^$|(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
    Description: '[ Optional ] The main domain name of the Drupal site (e.g. example.com). Leave empty to use the ALB DNS name for the Drupal site.'
    Type: String
  Locale:
    Description: The main language of the Drupal site, as per https://codex.Drupal.org/Installing_Drupal_in_Your_Language. The default is 'en_GB'.
    Type: String
    Default: en_GB
  Title:
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9 _-]*)([a-zA-Z0-9])$
    Description: The Drupal website title.
    Type: String
  InstallProfile:
    Default: localgov
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9 _-]*)([a-zA-Z0-9])$
    Description: The Drupal install profile to use.
    Type: String
  ComposerProject:
    Default: localgovdrupal/localgov-project
    AllowedPattern: ^([a-zA-Z0-9])([a-zA-Z0-9\/ _-]*)([a-zA-Z0-9])$
    Description: The composer project to install.
    Type: String
  ComposerUseDev:
    AllowedValues:
      - True
      - False
    Default: True
    Description: Specifies whether Composer should use a dev version when installing Drupal.
    Type: String

Conditions:

  NoSslCertificate:
    !Equals [ False, !Ref SslCertificate ]
  MoreThan2AZ:
    !Or [
      !Equals [ !Ref 'AWS::Region', us-east-1 ],
      !Equals [ !Ref 'AWS::Region', us-east-2 ],
      !Equals [ !Ref 'AWS::Region', us-west-2 ],
      !Equals [ !Ref 'AWS::Region', eu-west-1 ],
      !Equals [ !Ref 'AWS::Region', eu-west-2 ],
      !Equals [ !Ref 'AWS::Region', sa-east-1 ],
      !Equals [ !Ref 'AWS::Region', ap-northeast-1 ],
      !Equals [ !Ref 'AWS::Region', ap-southeast-2 ]
    ]
  NoDomainName:
    !Equals [ '', !Ref DomainName ]


Mappings:

  RegionMap:
    ap-northeast-1:
      AMI: ami-06098fd00463352b6
    ap-northeast-2:
      AMI: ami-07464b2b9929898f8
    ap-south-1:
      AMI: ami-0bcf5425cdc1d8a85
    ap-southeast-1:
      AMI: ami-03ca998611da0fe12
    ap-southeast-2:
      AMI: ami-06202e06492f46177
    ca-central-1:
      AMI: ami-09934b230a2c41883
    eu-central-1:
      AMI: ami-0db9040eb3ab74509
    eu-west-1:
      AMI: ami-0ffea00000f287d30
    eu-west-2:
      AMI: ami-0fbec3e0504ee1970
    sa-east-1:
      AMI: ami-0c27c96aaa148ba6d
    us-east-1:
      AMI: ami-0742b4e673072066f
    us-east-2:
      AMI: ami-05d72852800cbf29e
    us-west-1:
      AMI: ami-0577b787189839998
    us-west-2:
      AMI: ami-0518bb0e75d3619ca

Resources:

  WebInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref WebInstanceRole
  WebInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource:
            - arn:aws:logs:*:*:*
  WebAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Cooldown: 60
      HealthCheckGracePeriod: 120
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref WebLaunchConfiguration
      MaxSize: !Ref WebAsgMax
      MinSize: !Ref WebAsgMin
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Web ASG / ', !Ref 'AWS::StackName' ] ]
          PropagateAtLaunch: true
      TargetGroupARNs:
        - !Ref PublicAlbTargetGroupArn
      VPCZoneIdentifier:
        !If [
          MoreThan2AZ,
          [ !Ref WebSubnet0, !Ref WebSubnet1, !Ref WebSubnet2 ],
          [ !Ref WebSubnet0, !Ref WebSubnet1 ]
        ]
    CreationPolicy:
      ResourceSignal:
        Count: 0
        Timeout: PT20M
  WebLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          deploy_webserver:
            - prepare_php
            - install_webserver
            - install_composer
            - build_cacheclient
            - build_drupal
            - install_cacheclient
            - install_drupal
            - start_webserver
        prepare_php:
          commands:
            enable_php_74:
              command: 'amazon-linux-extras enable php7.4; yum clean metadata'
        install_webserver:
          packages:
            yum:
              awslogs: []
              httpd: []
              mariadb: []
              php: []
              php-mysqlnd: []
              php-gd: []
              php-pdo: []
              php-mbstring: []
              php-opcache: []
              php-pecl-memcached: []
              php-pecl-apcu: []
              php-xml: []
              git: []
          files:
            /tmp/create_site_conf.sh:
              content:
                !Join [
                  "",[
                    "#!/bin/bash -xe\n",
                    "if [ ! -f /etc/httpd/conf.d/", !Ref Directory, ".conf ]; then\n",                    
                    "   touch /etc/httpd/conf.d/", !Ref Directory, ".conf\n",
                    "   echo 'ServerName 127.0.0.1:80' >> /etc/httpd/conf.d/", !Ref Directory, ".conf\n",
                    "   echo 'DocumentRoot /var/www/drupal/", !Ref Directory, "/web' >> /etc/httpd/conf.d/", !Ref Directory, ".conf\n",
                    "   echo '<Directory /var/www/drupal/", !Ref Directory, "/web>' >> /etc/httpd/conf.d/", !Ref Directory, ".conf\n",
                    "   echo '  Options Indexes FollowSymLinks' >> /etc/httpd/conf.d/", !Ref Directory, ".conf\n",
                    "   echo '  AllowOverride All' >> /etc/httpd/conf.d/", !Ref Directory, ".conf\n",
                    "   echo '  Require all granted' >> /etc/httpd/conf.d/", !Ref Directory, ".conf\n",
                    "   echo '</Directory>' >> /etc/httpd/conf.d/", !Ref Directory, ".conf\n",
                    "fi\n"
                  ]
                ]
              mode: 000500
              owner: root
              group: root
          commands:
            create_site_conf:
              command: ./create_site_conf.sh
              cwd: /tmp
              ignoreErrors: false
        install_composer:
          commands:
            a_download_composer:
              command: wget https://getcomposer.org/download/2.0.12/composer.phar
              cwd: /tmp
              ignoreErrors: false
            b_install_composer:
              command: mv /tmp/composer.phar /usr/bin/composer
              ignoreErrors: false
            c_set_composer_perms:
              command: chmod +x composer
              cwd: /usr/bin
              ignoreErrors: false
        build_cacheclient:
          packages:
            yum:
              gcc-c++: []  
          files:
            /tmp/install_cacheclient.sh:
              content:
                !Join [
                  "",[
                    "#!/bin/bash -xe\n",
                    "wget https://elasticache-downloads.s3.amazonaws.com/ClusterClient/PHP-7.4/latest-64bit-X86\n",
                    "mv latest-64bit-X86 /tmp/AmazonElastiCacheClusterClient-PHP74-64bit-libmemcached.tar.gz\n",
                    "tar -xf '/tmp/AmazonElastiCacheClusterClient-PHP74-64bit-libmemcached.tar.gz'\n",
                    "cp '/tmp/amazon-elasticache-cluster-client.so' /usr/lib64/php/modules/\n",
                    "if [ ! -f /etc/php.d/50-memcached.ini ]; then\n",
                    "  echo 'extension=/usr/lib64/php/modules/amazon-elasticache-cluster-client.so' > /etc/php.d/50-memcached.ini\n",
                    "fi\n",
                    "sed -i 's/memcached.so/\\/usr\\/lib64\\/php\\/modules\\/amazon-elasticache-cluster-client.so/g' /etc/php.d/50-memcached.ini\n"
                  ]
                ]
              mode: 000500
              owner: root
              group: root
        build_drupal:
          files:
            /tmp/install_drupal.sh:
              content:
                !Join [
                  "",[
                    "#!/bin/bash -xe\n",
                    "\n",
                    "# enable PHP logging to journald\n",
                    "sed -i 's/;error_log = syslog/error_log = syslog/g' /etc/php.ini\n",
                    "\n",
                    "# sleep for a random number of seconds up to 60 to avoid running composer simultaneously on first install\n",
                    "sleep $((RANDOM % 60))\n",
                    "# if target directory doesn't exist then build Drupal\n",
                    "if [ ! -d /var/www/drupal/", !Ref Directory, " ]; then\n",
                    "  # create drupal install user\n",
                    "  useradd -g apache drupal\n",
                    "  # set ownership and perms on application directory\n",
                    "  chmod 775 /var/www/drupal\n",
                    "  chown apache:apache /var/www/drupal\n",
                    "  # run composer with drupal user\n",
                    "  # no 'stable' version of LocalGovDrupal yet\n",
                    "  cd /var/www/drupal/\n",
                    "  su -c 'composer create-project --stability dev ", !Ref ComposerProject, " ", !Ref Directory, " --remove-vcs' drupal\n",
                    "  # delete any settings.php files already there\n",
                    "  rm -Rf ", !Ref Directory, "/web/sites/*/settings.*\n",
                    "  # install the site with drush\n",
                    "  su -c '", !Ref Directory, "/vendor/drush/drush/drush -y site-install ", !Ref InstallProfile, " --db-url=mysql://", !Ref DatabaseMasterUsername, ":", !Ref DatabaseMasterPassword, "@", !Ref DatabaseClusterEndpointAddress, "/", !Ref DatabaseName, "  --account-pass=", !Ref AdminPassword, " --account-mail=", !Ref AdminEmail, "' drupal\n",
                    "  # run a cache rebuild for safety\n",
                    "  su -c '/var/www/drupal/", !Ref Directory, "/vendor/drush/drush/drush -y cr' drupal\n",
                    "else\n",
                    "  # wait until Drupal is built so Apache restart step doesn't fail\n",
                    "  until [ -d /var/www/drupal/", !Ref Directory, "/web ]\n",
                    "  do\n",
                    "    sleep 30\n",
                    "  done\n",
                    "fi\n"
                  ]
                ]
              mode: 000500
              owner: root
              group: root
        install_drupal:
          commands:
            install_drupal:
              command: ./install_drupal.sh
              cwd: /tmp
              ignoreErrors: false          
        install_cacheclient:
          commands:
            install_cacheclient:
              command: ./install_cacheclient.sh
              cwd: /tmp
              ignoreErrors: false
        start_webserver:
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
          commands:
            start_webserver:
              command: service httpd restart
              ignoreErrors: false
    Properties:
      IamInstanceProfile: !Ref WebInstanceProfile
      ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', AMI ]
      InstanceMonitoring: true
      InstanceType: !Ref WebInstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
      - !Ref WebSecurityGroup
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            yum update -y
            mkdir -p /var/www/drupal
            mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${ElasticFileSystem}.efs.${AWS::Region}.amazonaws.com:/ /var/www/drupal
            /opt/aws/bin/cfn-init --configsets deploy_webserver --verbose --stack ${AWS::StackName} --resource WebLaunchConfiguration --region ${AWS::Region}
            sleep 600
            /opt/aws/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource WebAutoScalingGroup --region ${AWS::Region}
            service httpd restart
